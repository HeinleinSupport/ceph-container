bash -c ' \
if [[ "__ENV_[BASEOS_REPO]__" == "ubi" ]]; then \
  rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm ; \
else \
  yum install -y epel-release ; \
fi' && \
yum install -y jq https://apache.jfrog.io/artifactory/arrow/centos/$(echo __ENV_[BASEOS_TAG]__ | cut -d '.' -f1)/apache-arrow-release-latest.rpm && \
bash -c ' \
  if [ -n "__GANESHA_PACKAGES__" ]; then \
    echo "[ganesha]" > /etc/yum.repos.d/ganesha.repo ; \
    echo "name=ganesha" >> /etc/yum.repos.d/ganesha.repo ; \
    if [[ "${CEPH_VERSION}" == master ]]; then \
      echo "baseurl=https://buildlogs.centos.org/centos/\$releasever/storage/\$basearch/nfsganesha-3/" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "gpgcheck=0" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
    elif [[ "${CEPH_VERSION}" == pacific ]]; then \
      echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V3.5-stable/$CEPH_VERSION/el\$releasever/\$basearch/" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
      echo "[ganesha-noarch]" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "name=ganesha-noarch" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V3.5-stable/$CEPH_VERSION/el\$releasever/noarch/" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
    elif [[ "${CEPH_VERSION}" == octopus ]]; then \
      echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V3.3-stable/$CEPH_VERSION/el\$releasever/\$basearch/" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
      echo "[ganesha-noarch]" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "name=ganesha-noarch" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V3.3-stable/$CEPH_VERSION/el\$releasever/noarch/" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
    elif [[ "${CEPH_VERSION}" == nautilus ]]; then \
      echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V2.8-stable/$CEPH_VERSION/\$basearch/" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
    else \
      echo "baseurl=https://download.ceph.com/nfs-ganesha/rpm-V2.7-stable/$CEPH_VERSION/\$basearch/" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "gpgcheck=1" >> /etc/yum.repos.d/ganesha.repo ; \
      echo "enabled=1" >> /etc/yum.repos.d/ganesha.repo  ; \
    fi ; \
  fi ; \
  if [[ "__ENV_[BASEOS_REPO]__" == "ubi" ]]; then \
    echo "[centos-baseos]" > /etc/yum.repos.d/centos.repo ; \
    echo "name=centos-baseos" >> /etc/yum.repos.d/centos.repo ; \
    echo "baseurl=http://mirror.centos.org/centos/\$releasever/BaseOS/\$basearch/os/" >> /etc/yum.repos.d/centos.repo ; \
    echo "gpgcheck=1" >> /etc/yum.repos.d/centos.repo ; \
    echo "enabled=1" >> /etc/yum.repos.d/centos.repo ; \
    echo "[centos-appstream]" >> /etc/yum.repos.d/centos.repo ; \
    echo "name=centos-appstream" >> /etc/yum.repos.d/centos.repo ; \
    echo "baseurl=http://mirror.centos.org/centos/\$releasever/AppStream/\$basearch/os/" >> /etc/yum.repos.d/centos.repo ; \
    echo "gpgcheck=1" >> /etc/yum.repos.d/centos.repo ; \
    echo "enabled=1" >> /etc/yum.repos.d/centos.repo ; \
    rpm --import https://www.centos.org/keys/RPM-GPG-KEY-CentOS-Official ; \
  fi ; \
  if [ -n "__ISCSI_PACKAGES__" ]; then \
    curl -s -L https://shaman.ceph.com/api/repos/tcmu-runner/master/latest/centos/$(echo __ENV_[BASEOS_TAG]__ | cut -d '.' -f1)/repo?arch=$(arch) -o /etc/yum.repos.d/tcmu-runner.repo ; \
    if [[ "${CEPH_VERSION}" =~ master ]]; then \
      curl -s -L https://shaman.ceph.com/api/repos/ceph-iscsi/master/latest/centos/$(echo __ENV_[BASEOS_TAG]__ | cut -d '.' -f1)/repo -o /etc/yum.repos.d/ceph-iscsi.repo ; \
    elif [[ "${CEPH_VERSION}" =~ nautilus|octopus|pacific ]]; then \
      curl -s -L https://download.ceph.com/ceph-iscsi/3/rpm/el$(echo __ENV_[BASEOS_TAG]__ | cut -d '.' -f1)/ceph-iscsi.repo -o /etc/yum.repos.d/ceph-iscsi.repo ; \
    else \
      curl -s -L https://download.ceph.com/ceph-iscsi/2/rpm/el$(echo __ENV_[BASEOS_TAG]__ | cut -d '.' -f1)/ceph-iscsi.repo -o /etc/yum.repos.d/ceph-iscsi.repo ; \
    fi ; \
  fi' && \
yum update -y --setopt=install_weak_deps=False && \
rpm --import 'https://download.ceph.com/keys/release.asc' && \
if [[ "${CEPH_VERSION}" == nautilus ]]; then \
  CEPH_MGR_K8SEVENTS="ceph-mgr-k8sevents__ENV_[CEPH_POINT_RELEASE]__"; \
  if [[ -n "__ENV_[CEPH_POINT_RELEASE]__" ]]; then \
    CPR=__ENV_[CEPH_POINT_RELEASE]__ ; \
    if [[ ${CPR:1:2} -eq 14 ]] && [[ ${CPR:4:1} -eq 2 ]] && [[ ${CPR:6} -lt 5 ]]; then \
      CEPH_MGR_K8SEVENTS="" ; \
    fi ; \
  fi ; \
fi && \
bash -c ' \
  if [[ "${CEPH_VERSION}" =~ master ]] || ${CEPH_DEVEL}; then \
    ARCH=$(arch); \
    if [[ "${ARCH}" == "aarch64" ]]; then \
      ARCH="arm64"; \
    fi ; \
    REPO_URL=$(curl -s "https://shaman.ceph.com/api/search/?project=ceph&distros=centos/$(echo __ENV_[BASEOS_TAG]__ | cut -d '.' -f1)/${ARCH}&flavor=${OSD_FLAVOR}&ref=${CEPH_REF}&sha1=latest" | jq -r .[0].url); \
    RELEASE_VER=0 ;\
    if [[ "${OSD_FLAVOR}" == "crimson" ]]; then \
     CRIMSON_PACKAGES="ceph-crimson-osd__ENV_[CEPH_POINT_RELEASE]__";\
    fi ;\
  else \
    RELEASE_VER=1 ;\
    REPO_URL="http://download.ceph.com/rpm-${CEPH_VERSION}/el$(echo __ENV_[BASEOS_TAG]__ | cut -d '.' -f1)/"; \
  fi && \
  rpm -Uvh "$REPO_URL/noarch/ceph-release-1-${RELEASE_VER}.el$(echo __ENV_[BASEOS_TAG]__ | cut -d '.' -f1).noarch.rpm" && \
  if [[ $(echo __ENV_[BASEOS_TAG]__ | cut -d '.' -f1) -eq 8 ]]; then \
    yum install -y dnf-plugins-core ; \
    yum copr enable -y tchaikov/python-scikit-learn ; \
    yum copr enable -y tchaikov/python3-asyncssh ; \
  fi ' && \
bash -c ' \
if [[ "__ENV_[BASEOS_REPO]__" == "ubi" ]]; then \
  yum install -y --setopt=install_weak_deps=False --enablerepo=ubi-$(echo __ENV_[BASEOS_TAG]__ | cut -d '.' -f1)-codeready-builder __CEPH_BASE_PACKAGES__ ; \
else \
  yum install -y --setopt=install_weak_deps=False --enablerepo=powertools __CEPH_BASE_PACKAGES__ ; \
fi'
